name: Project Initiation Workflow
description: Streamlined end-to-end project setup with Notion, GitHub, and resource provisioning
version: "2.0.0"

metadata:
  workflow_id: project-initiation
  category: project-management
  estimated_duration: "15-30 minutes"
  required_agents:
    - project-manager-agent
    - notion-agent
    - github-agent
  
trigger:
  command: "*create-project"
  required_params:
    - project_type
  optional_params:
    - project_name
    - description
    - team_members

stages:
  - stage: "validation"
    name: "Quick Requirements Check"
    agent: project-manager-agent
    description: "Semi-detailed validation to ensure we have everything needed"
    tasks:
      - task: validate_core_requirements
        description: "Check essential project parameters"
        inputs:
          - project_type
          - project_name
          - description
        outputs:
          - validated_requirements
          - project_scope
        validation_checks:
          - project_type_exists: "Verify project type is supported (web-app, api-service, data-pipeline, infrastructure)"
          - name_availability: "Check project name availability in GitHub org and Notion"
          - description_quality: "Ensure description is clear and actionable"
          - resource_feasibility: "Quick check if infrastructure requirements are reasonable"
        
      - task: gather_optional_details
        description: "Collect additional project details if not provided"
        inputs:
          - team_members
          - budget_constraints
          - timeline_requirements
          - compliance_needs
        outputs:
          - complete_requirements
          - planning_parameters
        prompts:
          - team_assignment: "Who should be assigned to this project?"
          - infrastructure_needs: "Will this project need dedicated infrastructure?"
          - integration_requirements: "Any specific integrations or external dependencies?"
    
  - stage: "notion_setup"
    name: "Create Project + Initial Tasks"
    agent: notion-agent
    depends_on: validation
    description: "Detailed Notion setup - the heart of project organization"
    tasks:
      - task: create_main_project_entry
        description: "Create master project record in Projects database"
        inputs:
          - complete_requirements
          - validated_requirements
        outputs:
          - project_id
          - notion_project_url
        notion_fields:
          - name: "Project title from requirements"
          - type: "Project type (web-app, api-service, etc.)"
          - status: "Planning"
          - priority: "From requirements or default Medium"
          - description: "Rich text description"
          - team: "Multi-select team members"
          - created_date: "Auto-populated"
          - estimated_completion: "Based on project type defaults"
        
      - task: generate_task_breakdown
        description: "Create comprehensive initial task list based on project type template"
        inputs:
          - project_id
          - project_type
          - planning_parameters
        outputs:
          - task_list
          - task_ids
          - task_dependencies
        task_creation_strategy:
          - use_project_template: "Load task template for project type"
          - customize_tasks: "Adapt tasks based on specific requirements"
          - set_priorities: "Assign priorities based on project timeline"
          - establish_dependencies: "Link tasks with proper sequencing"
          - assign_estimates: "Add time estimates from templates"
        
      - task: create_project_documentation_hub
        description: "Set up project documentation structure in Notes database"
        inputs:
          - project_id
          - project_scope
          - complete_requirements
        outputs:
          - documentation_hub_id
          - documentation_structure
          - initial_docs_created
        documentation_setup:
          - project_overview: "Main project description and goals"
          - technical_specs: "Technical requirements and architecture notes"
          - meeting_notes: "Template for project meetings"
          - decision_log: "Track important project decisions"
          - resource_links: "Links to external resources and dependencies"
        
      - task: establish_project_relationships
        description: "Link project to related tasks and documentation"
        inputs:
          - project_id
          - task_ids
          - documentation_hub_id
        outputs:
          - relationship_mapping
          - cross_references_created
        relationship_types:
          - project_to_tasks: "Bidirectional linking between project and all tasks"
          - project_to_docs: "Link project to documentation hub"
          - task_to_docs: "Link relevant tasks to specific documentation"
          - dependency_chains: "Establish task dependency relationships"

  - stage: "github_setup"
    name: "Repo Creation (if needed)"
    agent: github-agent
    depends_on: notion_setup
    condition:
      - github_repo_requested: true
    description: "Simple GitHub repository setup when code repository is needed"
    tasks:
      - task: create_repository
        description: "Create GitHub repository with appropriate template"
        inputs:
          - project_name
          - project_type
          - description
          - github_org
        outputs:
          - repository_url
          - repository_id
          - clone_url
        
      - task: initialize_repository
        description: "Set up basic repository structure and settings"
        inputs:
          - repository_id
          - project_type
        outputs:
          - initial_structure_created
          - default_branch_configured
          - basic_workflows_added

  - stage: "finalization"
    name: "Link Everything Together"
    agent: project-manager-agent
    depends_on: 
      - notion_setup
      - github_setup
    description: "Connect all systems and finalize project setup"
    tasks:
      - task: link_notion_and_github
        description: "Create bidirectional links between Notion project and GitHub repo"
        inputs:
          - project_id
          - repository_url
          - notion_project_url
        outputs:
          - integration_status
          - cross_reference_links
        
      - task: generate_project_summary
        description: "Create comprehensive project setup summary"
        inputs:
          - project_id
          - notion_project_url
          - repository_url
          - task_list
          - documentation_structure
        outputs:
          - project_summary
          - access_information
          - next_steps_guide
        
      - task: notify_team
        description: "Send project setup notifications to team members"
        inputs:
          - team_members
          - project_summary
          - access_information
        outputs:
          - notification_sent
          - team_access_confirmed

success_criteria:
  - notion_project_created: true
  - github_repository_created: true
  - resources_allocated: true
  - integrations_configured: true
  - team_notified: true

rollback_procedures:
  notion_rollback:
    - Delete created project entry
    - Remove generated tasks
    - Clean up project documentation
  
  github_rollback:
    - Delete created repository
    - Clean up local clone
    - Remove webhook configurations
  
  resource_rollback:
    - Deallocate provisioned resources
    - Clean up network configurations
    - Remove monitoring setup

error_handling:
  agent_failure:
    action: "Continue with other stages, mark failed stage for retry"
    max_retries: 3
    escalation: "Notify project manager for manual intervention"
  
  resource_shortage:
    action: "Queue project for later provisioning"
    notification: "Inform user of delay and expected availability"
  
  integration_failure:
    action: "Complete individual setups, flag integration for manual setup"
    fallback: "Provide manual integration instructions"

monitoring:
  workflow_progress:
    - Stage completion percentage
    - Task execution time
    - Error occurrences
    - Resource utilization
  
  success_metrics:
    - Time to project creation
    - Integration success rate
    - User satisfaction score
    - Resource allocation efficiency

notifications:
  workflow_start:
    recipients: [user, project_manager]
    message: "Project initiation workflow started for {project_name}"
  
  stage_completion:
    recipients: [user]
    message: "Completed {stage_name} for project {project_name}"
  
  workflow_completion:
    recipients: [user, team_members, project_manager]
    message: "Project {project_name} successfully initialized"
    attachments: [project_summary, access_information]
  
  workflow_failure:
    recipients: [user, project_manager]
    message: "Project initiation failed at {failed_stage}"
    attachments: [error_log, rollback_summary]